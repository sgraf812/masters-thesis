@article{dfa,
author = {Cooper, K.D. and Harvey, T.J. and Kennedy, K.},
journal = {Programming Language Design and Implementation-PLDI},
title = {{Iterative data-flow analysis, revisited}},
year = {2003}
}
@article{firm,
author = {Braun, Matthias and Zwinkau, Andreas},
pages = {61--68},
title = {{FIRM â€” A Graph-Based Intermediate Representation}},
year = {2011}
}
@article{thorin,
author = {Lei{\ss}a, Roland and Marcel, K and Hack, Sebastian},
isbn = {9781479981618},
title = {{A Graph-Based Higher-Order Intermediate Representation}},
year = {2015}
}
@phdthesis{Verstoep,
author = {Verstoep, Hidde},
isbn = {9781450332972},
keywords = {absence analysis,and sharing information,cardinality analysis,polyvariance,sharing anal-,the generic,two different instantiations of,type-based program analysis,uniqueness typing,usage analysis,ysis},
pages = {139--142},
title = {{Polyvariant Cardinality Analysis for Non-strict Higher-order Functional Languages}}
}
@article{cpr,
author = {Baker-finch, Clem and Jones, Simon Peyton},
doi = {10.1017/S0956796803004751},
number = {March},
pages = {211--245},
title = {{Constructed product result analysis for Haskell}},
volume = {14},
year = {2004}
}
@article{anf,
author = {Sabry, A M R and Felleisen, Matthias},
keywords = {-calculus,continuation-passing style,cps transformations,inverse cps transformations,iocc,v -c-calculus,v -calculus},
title = {{Reasoning about Programs in Continuation-Passing Style}},
year = {1993}
}
@techreport{dmd,
author = {{Peyton Jones}, Simon and Sestoft, Peter and Hughes, John},
title = {{Demand analysis}}
}
@article{Gill2009,
author = {Gill, Andy and Hutton, Graham},
doi = {10.1017/S0956796809007175},
number = {2},
pages = {227--251},
title = {{The worker / wrapper transformation}},
volume = {19},
year = {2009}
}
@phdthesis{callarity,
author = {Breitner, Joachim},
school = {Karlsruhe Institute of Technology},
title = {{Lazy Evaluation: From natural semantics to a machine-checked compiler transformation}},
year = {2016}
}
@phdthesis{warnsbrough,
author = {Wansbrough, Keith},
number = {623},
school = {University of Cambridge},
title = {{Simple polymorphic usage analysis}},
year = {2005}
}
@article{card,
author = {Sergey, Ilya and {Peyton Jones}, Simon},
title = {{Modular, Higher-Order Cardinality Analysis in Theory and Practice}}
}
@incollection{agt,
abstract = {This chapter introduces the class of perfect graphs known as comparability graphs or transitively orientable graphs. An undirected graph G=(V, E) is a comparability graph if there exists an orientation (V, F) of G. The relation F is a strict partial ordering of V whose comparability relation is exactly E, and F is called a transitive orientation of G (or of E). Comparability graphs are also known as transitively orientable graphs and partially orderable graphs. Examples of several comparability graphs are presented. The chapter provides the justification for an algorithm, which assigns a transitive orientation to a comparability graph. A graph is called decomposable if it can be expressed as a nontrivial composition of some of its induced subgraphs; otherwise, it is called indecomposable.},
author = {Golumbic, Martin Charles},
booktitle = {Annals of Discrete Mathematics},
doi = {10.1016/S0167-5060(04)80053-0},
isbn = {9780444515308},
issn = {01675060},
pages = {105--148},
title = {{Comparability graphs}},
volume = {57},
year = {2004}
}
